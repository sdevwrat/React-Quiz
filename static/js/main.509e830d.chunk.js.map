{"version":3,"sources":["resource/database.js","App.js","serviceWorker.js","index.js"],"names":["question","answers","correct","App","props","reload","setState","score","show","selected","count","showQue","q_no","clearInterval","myInterval","data","options","que_no","setInterval","prevState","state","nextQue","total","chosen","id","Start","length","bind","this","className","onClick","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.509e830d.chunk.js","sourcesContent":["export default [\n    {\n        question: 'React is _______',\n        answers: [\n            'Module based',\n            'Component based',\n            'Both of above',\n            'None of above'\n        ],\n        correct: 2\n    },\n    {\n        question: 'As soon as the state of react component is changed, component will',\n        answers: [\n            'Does nothing , you have to call render method to render the component again',\n            'be created again from scratch',\n            're-renders the component',\n            'None of above'\n        ],\n        correct: 1\n    },\n    {\n        question: 'We can go for ______ when there is possibility that our user could change the data?',\n        answers: [\n            'Keys',\n            'Ref',\n            'Both',\n            'None of above'\n        ],\n        correct: 1\n    },\n\n    {\n        question: 'JSX is typesafe?',\n        answers: [\n            'True',\n            'False',\n            'None of the Above',\n            'Cannot Be Determined'\n        ],\n        correct: 1\n    },    \n    {\n        question: 'Keys are given to a list of elements in react. These keys should be -',\n        answers: [\n            'Do not requires to be unique',\n            'Unique in the DOM', \n            'Unique among the siblings only', \n            'All of the Above'\n        ],    \n        correct: 3\n    },\n    {\n        question: 'ReactJS uses _____ to increase performance',\n        answers: [\n            'Original DOM',\n            'Virtual DOM', \n            'Both 1 & 2', \n            'None of the above'\n        ],    \n        correct: 2\n    },\n    {\n        question: 'In React what is used to pass data to a component from outside?',\n        answers: [\n            'setState',\n            'render with arguments', \n            'props', \n            'PropTypes'\n        ],    \n        correct: 3\n    },\n    {\n        question: 'What is ReactJS?',\n        answers: [\n            'Server side Framework',\n            'A Library for building interaction interfaces', \n            'User-interface framework', \n            'None of the Above'\n        ],    \n        correct: 2\n    },\n    {\n        question: 'State in react is________',\n        answers: [\n            'Internal storage of the component',\n            'A permanent storage',\n            'Both of Above', \n            'None of the Above'\n        ],    \n        correct: 1\n    },\n    {\n        question: 'Everything in React is a _____________',\n        answers: [\n            'Module',\n            'Component', \n            'Package', \n            'Class'\n        ],    \n        correct: 2\n    },\n    {\n        question: 'React merges the object you provide into the current state using which of the following',\n        answers: [\n            'setState()',\n            'State()', \n            'getState()', \n            'None of the Above'\n        ],    \n        correct: 1\n    },    \n    {\n        question: 'Arbitrary inputs of components are called?',\n        answers: [\n            'Keys',\n            'Props', \n            'Elements', \n            'Ref'\n        ],    \n        correct: 2\n    },\n    {\n        question: '_____ can be done while more than one element needs to be returned from a component?',\n        answers: [\n            'Abstraction',\n            'Packing', \n            'Insulation', \n            'Wrapping'\n        ],    \n        correct: 4\n    },\n    {\n        question: 'Which of the following needs to be updated to achieve dynamic UI updates?',\n        answers: [\n            'State',\n            'Props', \n            'Components', \n            'None of the Above'\n        ],    \n        correct: 1\n    },\n    {\n        question: 'Lifecycle methods are mainly used _____',\n        answers: [\n            'To keep track of event history',\n            'To enhance components', \n            'Free up resources', \n            'None of the Above'\n        ],    \n        correct: 3\n    }\n]","import React from 'react';\nimport data from './resource/database';\nimport './App.css';\n\n class App extends React.Component{\n \tconstructor(props){\n \t\tsuper(props);\n \t\tthis.state = {\n \t\t\tque_no : 0,\n \t\t\ttotal : data.length,\n \t\t\tscore : 0,\n \t\t\tselected: 0,\n \t\t\tshow:0,\n \t\t\tcount:180\n \t\t}\n \t\tthis.showQue = this.showQue.bind(this);\n \t\tthis.chosen = this.chosen.bind(this);\n \t\tthis.nextQue = this.nextQue.bind(this);\n \t}\n \treload = () =>{\n \t\tthis.setState({\n \t\t\tscore:0,\n \t\t\tshow:0,\n \t\t\tselected:0,\n \t\t\tcount:180\n \t\t})\n \t\tthis.showQue(0);\n \t}\n \tshowQue = (q_no) =>{\n \t\tclearInterval(this.myInterval);\n \t \t this.setState({\n \t\t\tquestion: data[q_no].question,\n \t\t\toptions : data[q_no].answers,\n \t\t\tcorrect : data[q_no].correct,\n \t\t\tque_no : q_no+1\n \t\t});\n \t\tthis.myInterval = setInterval(() =>{\n\t      this.setState(prevState => ({\n\t        count:this.state.count-1\n\t      }))\n\t    },1000)\n  \t}\n\n \tnextQue = () =>{\n \t\tlet {selected,correct,score,que_no,total} = this.state;\n \t\tif(selected===correct){\n\t \t\tthis.setState({\n\t \t\t\tscore: score+1\t\n\t \t\t})\n \t\t}\n \t\tif(que_no===total){\n \t\t\tthis.setState({\n \t\t\t\tshow:2,\n \t\t\t});\n \t\t}\n \t\telse{\n \t\t\tthis.setState({selected:0,count:180});\n \t\t\tthis.showQue(que_no);\n \t\t}\n \t}\n\n \tchosen = (id) => {\n \t\tthis.setState({\n \t\t\tselected:id\n \t\t});\n \t}\n\n \tStart= () =>{\n \t\tthis.setState({\n \t\t\tshow : 1\n \t\t})\n \t\tthis.showQue(0);\n \t}\n\n \trender() {\n \t\tlet {que_no,total,score,question,options,count,selected,show} = this.state\n \t\tif(!count){\n\t \t\t\tif(show==2){\n\t \t\t\t\tclearInterval(this.myInterval);\n\t \t\t}\n\t \t\telse\n \t\t\t\tthis.nextQue();\n \t\t}\n  \t\treturn (\n \t\t\t<div className=\"container\">\n \t\t\t\t{show===0 && \n \t\t\t\t\t<div className=\"s0\">\n \t\t\t\t\t\t\t<h1> React Quiz </h1>\n \t\t\t\t\t\t\t<ul>\n \t\t\t\t\t\t\t\t<li>A sample quiz on react.</li>\n  \t\t\t\t\t\t\t\t<li> total 15 que will be here.</li>\n \t\t\t\t\t\t\t\t<li> maximum of 3 minutes is allowed for each question.</li>\n \t\t\t\t\t\t\t</ul>\n \t\t \t\t\t\t\t<button className=\"btn btn-primary btn-lg\" onClick = {this.Start}>\n\t\t \t\t\t\t\t\tStart Quiz\n\t\t \t\t\t\t\t</button>\n\t\t \t\t\t</div>\n \t\t\t\t}\n \t\t\t\t{\n \t\t\t\t\tshow===1 &&\n \t\t\t\t\t<div className=\"row\">\n \t\t\t\t\t<div className=\"col-lg-12 col-md-10\">\n\t \t\t\t\t\t<div className=\"que\">\n\t\t \t\t\t\t\t<h4 className=\"\"> Question {que_no}/{total}</h4> <span className=\"timer\"> Time left : {count} seconds </span>\n\t\t \t\t\t\t\t<p> {question} </p>\n\t\t \t\t\t\t</div>\n\n\t\t \t\t\t\t<div className=\"answer\">\n\t\t \t\t\t\t\t<ul>\n\t\t \t\t\t\t\t\t<li onClick={() => this.chosen(1)} className={(selected===1)?'chosen':\"\"}>\n\t\t \t\t\t\t\t\t\t<span>A</span>\n\t\t \t\t\t\t\t\t\t<p>{options[0]}</p>\n\t\t \t\t\t\t\t\t</li>\n\t\t \t\t\t\t\t\t<li onClick={() => this.chosen(2)} className={(selected===2)?'chosen':\"\"}>\n\t\t \t\t\t\t\t\t\t<span>B</span>\n\t\t \t\t\t\t\t\t\t<p>{options[1]}</p>\n\t\t \t\t\t\t\t\t</li>  \n\t\t \t\t\t\t\t\t<li onClick={() => this.chosen(3)} className={(selected===3)?'chosen':\"\"}>\n\t\t \t\t\t\t\t\t\t<span>C</span>\n\t\t \t\t\t\t\t\t\t<p>{options[2]}</p>\n\t\t \t\t\t\t\t\t</li>  \n\t\t \t\t\t\t\t\t<li onClick={() => this.chosen(4)} className={(selected===4)?'chosen':\"\"}>\n\t\t \t\t\t\t\t\t\t<span>D</span>\n\t\t \t\t\t\t\t\t\t<p>{options[3]}</p>\n\t\t \t\t\t\t\t\t</li>  \n\t\t \t\t\t\t\t</ul>  \n\t\t \t\t\t\t</div>\n\n\t\t \t\t\t\t<div className=\"submit\">\n\t\t \t\t\t\t\t<button className=\"btn btn-primary btn-lg\" onClick = {this.nextQue}>\n\t\t \t\t\t\t\t\t{(que_no===total)?'Submit Quiz': \"Next Question\"}\n\t\t \t\t\t\t\t</button>\n\t\t \t\t\t\t</div>\n \t\t\t\t\t</div>\n \t\t\t\t</div>\n \t\t\t\t}\n \t\t\t\t{\n \t\t\t\t\tshow===2 && \n \t\t\t\t\t<div className=\"que\">\n\t\t \t\t\t\t<p> You have completed the quiz. <br /> You got: <strong> {score} </strong> out of <strong> {total} </strong> questions right.</p>\n\t\t \t\t\t\t<button className=\"btn btn-primary btn-lg\" onClick = {this.reload}>\n\t\t \t\t\t\t\t\tRestart\n\t\t \t\t\t\t</button>\n \t\t\t\t\t</div>\n \t\t\t\t}\n \t\t\t</div>\n \t\t)\n \t}\n }\n\n export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}